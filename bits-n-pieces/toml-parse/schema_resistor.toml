schema_name = "resistor_generic"

# Anything in the [required] table can't be empty by definition. If it has to be
# a specific value, then that is specified

# string_anything - can be any string at all, even empty
# string_something - can be anything as long as it's not empty
# string_validpath - must resolve to a valid path on the filesystem
# numerical - can be either float or int, but will be converted to float
#
# Numerical types have a value but also some quantity that that they are measuring.
# The quantity must be specified so that the parser can take care of conversions
# between units. For example, "32F" and "0C" specified as temperatures should be
# represented internally as the same quantity. Doesn't matter what the base unit is,
# just as long as it's defined and consistent

[required.name]
    schema_type = "string_any"
    # TODO
    # schema_type = "string_something"
    # value = RE that defines the happy name types that I like

[required.type]
    schema_type = "string_exact"
    value = "resistor"

[required.models.symbol]
    schema_type = "string_validpath"

[required.models.footprint]
    schema_type = "string_validpath"

[required.param.resistance]
    schema_type = "numerical"
    quantity = "resistance"

[required.param.tolerance]
    schema_type = "numerical"
    quantity = "ratio"
    
[required.param.power]
    schema_type = "numerical"
    quantity = "power"

[optional.param.temp_coeff]
    schema_type = "numerical"
    quantity = "inverse_temperature"


